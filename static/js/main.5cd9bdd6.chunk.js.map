{"version":3,"sources":["FileSaver.js","App.js","reportWebVitals.js","index.js"],"names":["FileSaver","type","accept","onChange","event","input","file","files","arr","name","split","extension","length","dsv","d3","reader","FileReader","onload","fileList","parse","target","result","console","log","window","alert","forEach","f","i","saveAs","url","fileName","readAsText","loadFile","App","className","href","download","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAyBeA,EAtBG,WAmBhB,OAAO,uBAAOC,KAAK,OAAOC,OAAO,aAAaC,SAAU,SAACC,GAAD,OAlBvC,SAACC,GAChB,IAAMC,EAAOD,EAAME,MAAM,GACnBC,EAAMF,EAAKG,KAAKC,MAAM,KACtBC,EAAYH,EAAIA,EAAII,OAAS,GAC7BC,EAAMC,IAA2B,QAAdH,EAAsB,KAAO,KAEhDI,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAUb,GACxB,IAAMc,EAAWL,EAAIM,MAAMf,EAAMgB,OAAOC,QACxCC,QAAQC,IAAIL,GACZM,OAAOC,MAAM,mBACbP,EAASQ,SAAQ,SAACC,EAAGC,GACnBC,iBAAO,sCAAwCF,EAAEG,IAAKH,EAAEI,cAG5DhB,EAAOiB,WAAW1B,GAE6C2B,CAAS7B,EAAMgB,Y,MCAnEc,MAnBf,WACE,OACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,gEACA,wCAAU,uCAAV,SAA+B,uCAA/B,sBACA,+BACE,oCAAM,sCAAN,kBACA,sCAAQ,2CAAR,2EAEF,mDAAqB,mBAAGC,KAAK,gBAAgBC,UAAQ,EAAhC,kBAArB,QAAmE,mBAAGD,KAAK,gBAAgBC,UAAQ,EAAhC,kBAAnE,OACA,cAAC,EAAD,YCHKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5cd9bdd6.chunk.js","sourcesContent":["import { saveAs } from \"file-saver\";\nimport * as d3 from \"d3\";\n\nconst FileSaver = () => {\n  const loadFile = (input)=>{\n    const file = input.files[0];\n    const arr = file.name.split(\".\");\n    const extension = arr[arr.length - 1];\n    const dsv = d3.dsvFormat(extension === \"tsv\" ? \"\\t\" : \",\");\n\n    const reader = new FileReader();\n\n    reader.onload = function (event) {\n      const fileList = dsv.parse(event.target.result);\n      console.log(fileList)\n      window.alert(\"Start downloads\");\n      fileList.forEach((f, i) => {\n        saveAs(\"https://api.allorigins.win/raw?url=\" + f.url, f.fileName);\n      });\n    };\n    reader.readAsText(file);\n  }\n  return <input type=\"file\" accept=\".tsv, .csv\" onChange={(event)=>loadFile(event.target)} />;\n};\n\nexport default FileSaver;\n","import FileSaver from \"./FileSaver.js\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>Download and rename many files</h1>\n          <p>Load a <kbd>.csv</kbd> or a <kbd>.tsv</kbd> with 2 columns:</p>\n          <ul>\n            <li>a <kbd>url</kbd> to the file</li>\n            <li>the <kbd>fileName</kbd> you want to give to the downloaded file (with original extension)</li>\n          </ul>\n          <p>Example datasets? <a href=\"./example.csv\" download>Here</a> and <a href=\"./example.tsv\" download>here</a>.</p>\n          <FileSaver />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}