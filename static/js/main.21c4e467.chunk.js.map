{"version":3,"sources":["FileSaver.js","App.js","reportWebVitals.js","index.js"],"names":["FileSaver","type","accept","onChange","event","input","console","log","file","files","arr","name","split","extension","length","dsv","d3","reader","FileReader","onload","fileList","parse","target","result","window","alert","forEach","f","i","saveAs","url","filename","readAsText","loadFile","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAyBeA,EAtBG,WAmBhB,OAAO,uBAAOC,KAAK,OAAOC,OAAO,aAAaC,SAAU,SAACC,GAAD,OAlBvC,SAACC,GAClBC,QAAQC,IAAIF,GACV,IAAMG,EAAOH,EAAMI,MAAM,GACnBC,EAAMF,EAAKG,KAAKC,MAAM,KACtBC,EAAYH,EAAIA,EAAII,OAAS,GAC7BC,EAAMC,IAA2B,QAAdH,EAAsB,KAAO,KAEhDI,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAUf,GACxB,IAAMgB,EAAWL,EAAIM,MAAMjB,EAAMkB,OAAOC,QACxCC,OAAOC,MAAM,mBACbL,EAASM,SAAQ,SAACC,EAAGC,GACnBC,iBAAO,sCAAwCF,EAAEG,IAAKH,EAAEI,cAG5Dd,EAAOe,WAAWxB,GAE6CyB,CAAS7B,EAAMkB,Y,MCLnEY,MAdf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,gEACA,sEACA,+BACE,mDACA,mHAEF,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21c4e467.chunk.js","sourcesContent":["import { saveAs } from \"file-saver\";\nimport * as d3 from \"d3\";\n\nconst FileSaver = () => {\n  const loadFile = (input)=>{\n\t\tconsole.log(input)\n    const file = input.files[0];\n    const arr = file.name.split(\".\");\n    const extension = arr[arr.length - 1];\n    const dsv = d3.dsvFormat(extension === \"tsv\" ? \"\\t\" : \",\");\n\n    const reader = new FileReader();\n\n    reader.onload = function (event) {\n      const fileList = dsv.parse(event.target.result);\n      window.alert(\"Start downloads\");\n      fileList.forEach((f, i) => {\n        saveAs(\"https://api.allorigins.win/raw?url=\" + f.url, f.filename);\n      });\n    };\n    reader.readAsText(file);\n  }\n  return <input type=\"file\" accept=\".tsv, .csv\" onChange={(event)=>loadFile(event.target)} />;\n};\n\nexport default FileSaver;\n","import FileSaver from \"./FileSaver.js\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Download and rename many files</h1>\n      <p>import a csv or a tsv with 2 columns:</p>\n      <ul>\n        <li>a url to the file</li>\n        <li>the filename you want to give to the downloaded file (with original extension)</li>\n      </ul>\n      <FileSaver />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}